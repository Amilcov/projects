{"version":3,"sources":["components/Greenhouse/images/greenhouse-day.jpg","components/Greenhouse/images/greenhouse-night.jpg","context/ThemeContext.js","components/Greenhouse/LightSwitch.js","context/ClimateContext.js","components/Greenhouse/ClimateStats.js","components/Greenhouse/Greenhouse.js","components/Greenhouse/index.js","components/Navigation/Navigation.js","components/Navigation/index.js","components/Thermometer/Thermometer.js","components/Thermometer/index.js","components/Hygrometer/Hygrometer.js","components/Hygrometer/index.js","App.js","index.js"],"names":["ThemeContext","createContext","useTheme","useContext","ThemeProvider","children","useState","themeName","setThemeName","Provider","value","LightSwitch","className","onClick","ClimateContext","useClimate","ClimateProvider","props","temperature","setTemperature","humidity","setHumidity","ClimateStats","Greenhouse","src","dayImage","nightImage","alt","Navigation","exact","to","Thermometer","val","actualTemperature","setActualTemperature","useEffect","gradeDifference","Math","abs","direction","setTimeout","ReactSlider","onAfterChange","thumbClassName","trackClassName","ariaLabel","orientation","min","max","renderThumb","state","valueNow","renderTrack","index","invert","pearling","minDistance","Hygrometer","actualHumidity","setActualHumidity","humidityDifference","console","log","toFixed","stepHumidity","newValue","App","path","Root","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.759ce69f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/greenhouse-day.def73286.jpg\";","export default __webpack_public_path__ + \"static/media/greenhouse-night.4fe2c013.jpg\";","import { createContext, useContext, useState } from 'react';\n\nexport const ThemeContext = createContext();\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport default function ThemeProvider({ children }) {\n  const [themeName, setThemeName] = useState(\"day\");\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        themeName,\n        setThemeName\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n","import './LightSwitch.css';\nimport { useTheme } from '../../context/ThemeContext';\n\nfunction LightSwitch() {\n  const { themeName, setThemeName } = useTheme();\n\n  return (\n    <div className={`light-switch ${themeName}`}>\n      <div className={themeName == 'day' ? 'on' : 'off'} onClick={() => setThemeName('day')}>DAY</div>\n      <div className={themeName == 'night' ? 'on' : 'off'} onClick={() => setThemeName('night')}>NIGHT</div>\n    </div>\n  );\n} \n\nexport default LightSwitch;","// Temperature has a default value of 50 degrees\n// Humidity has a default value of 40%\n\n\nimport { createContext, useContext, useState } from \"react\";\n\nexport const ClimateContext = createContext();\nexport const useClimate = () => useContext(ClimateContext);\n\nexport default function ClimateProvider(props) {\n    const [temperature, setTemperature] = useState('50');\n    const [humidity, setHumidity] = useState('40');\n    return (\n        <ClimateContext.Provider value={{temperature, setTemperature, humidity, setHumidity}}>\n            {props.children}\n        </ClimateContext.Provider>\n    )\n}","import './ClimateStats.css';\nimport { useClimate } from '../../context/ClimateContext';\n\nfunction ClimateStats() {\n  const { temperature, humidity } = useClimate();\n  return (\n    <div className=\"climate-stats\">\n      <div className=\"temperature\">\n        Temperature {temperature}°F\n      </div>\n      <div className=\"humidity\">\n        Humidity {humidity}%\n      </div>\n    </div>\n  )\n}\n\nexport default ClimateStats;","import dayImage from './images/greenhouse-day.jpg';\nimport nightImage from './images/greenhouse-night.jpg';\n\nimport './Greenhouse.css';\n\nimport LightSwitch from './LightSwitch';\nimport ClimateStats from './ClimateStats';\nimport { useTheme } from '../../context/ThemeContext';\n\nfunction Greenhouse() {\n  const { themeName } = useTheme();\n \n  return (\n    <section>\n      <img  className='greenhouse-img'\n            src={themeName == 'day' ? dayImage : nightImage}\n            alt='greenhouse' \n      />\n      <LightSwitch />\n      <ClimateStats />\n    </section>\n  );\n}\n\nexport default Greenhouse;","import Greenhouse from './Greenhouse';\n\nexport default Greenhouse;\n","import { NavLink } from 'react-router-dom';\n\nimport './Navigation.css';\n\nfunction Navigation() {\n  return (\n    <nav>\n      <NavLink exact to=\"/\">Greenhouse</NavLink>\n      <NavLink to=\"/thermometer\">Thermometer</NavLink>\n      <NavLink to=\"/hygrometer\">Hygrometer</NavLink>\n    </nav>\n  )\n}\n\nexport default Navigation;\n","import Navigation from './Navigation';\n\nexport default Navigation;\n","import { useEffect, useState } from 'react';\nimport ReactSlider from \"react-slider\";\nimport { useClimate } from \"../../context/ClimateContext\";\nimport './Thermometer.css';\n\nfunction Thermometer(val) {\n  const { temperature, setTemperature } = useClimate();\n  const [actualTemperature, setActualTemperature] = useState(50);\n  useEffect(changeTemperature, [temperature, actualTemperature]);\n\n  function changeTemperature() {\n    let gradeDifference = Math.abs(temperature - actualTemperature);\n    let direction = temperature - actualTemperature > 0 ? 1 :-1\n    if (gradeDifference) setTimeout(()=> setActualTemperature(actualTemperature + direction), 1000);\n  }\n\n  return (\n    <section>\n      <h2>Thermometer</h2>\n      <div className=\"actual-temp\">Actual Temperature: {actualTemperature}°F</div>\n      <ReactSlider\n        value={temperature}\n        onAfterChange={(val) => setTemperature(val)}\n        className=\"thermometer-slider\"\n        thumbClassName=\"thermometer-thumb\"\n        trackClassName=\"thermometer-track\"\n        ariaLabel={\"Thermometer\"}\n        orientation=\"vertical\"\n        min={0}\n        max={120}\n        renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n        renderTrack={(props, state) => (\n          <div {...props} index={state.index}></div>\n        )}\n        invert\n        pearling\n        minDistance={1}\n      />\n    </section>\n  );\n}\n\nexport default Thermometer;","import Thermometer from './Thermometer';\n\nexport default Thermometer;","import { useEffect, useState } from \"react\";\nimport ReactSlider from \"react-slider\";\nimport { useClimate } from \"../../context/ClimateContext\";\nimport \"./Hygrometer.css\";\n\nfunction Hygrometer() {\n  const { humidity, setHumidity } = useClimate();\n  const [ actualHumidity, setActualHumidity ] = useState(40);\n  useEffect(changeHumidity, [humidity, actualHumidity]);\n\n  function changeHumidity() {\n    let humidityDifference = Math.abs(humidity - actualHumidity);\n    let direction = humidity - actualHumidity > 0 ? 1 : -1;\n    //Math.round((num + Number.EPSILON) * 100) / 100\n\n    if(humidityDifference) {\n      console.log('\\n humidity', humidity);\n      console.log('(humidity * 0.02).toFixed(2)',(humidity * 0.02).toFixed(2));\n      console.log('actualHumidity', actualHumidity);\n      console.log('humidityDifference', humidityDifference);\n      let stepHumidity = direction * Math.min((humidity * 0.02).toFixed(2), humidityDifference); \n      console.log('stepHumidity', stepHumidity);\n      //stepHumidity=  Math.round((stepHumidity + Number.EPSILON) * 100) / 100;\n      let newValue = +(actualHumidity + stepHumidity).toFixed(2);\n       console.log('newValue', newValue);\n\n      setTimeout(() => setActualHumidity(newValue), 1000);\n    }\n  }\n\n  return (\n    <section>\n      <h2>Hygrometer</h2>\n      <div className=\"actual-humid\">Actual Humidity: {actualHumidity}%</div>\n      <ReactSlider\n        value={humidity}\n        onAfterChange={(val) => {setHumidity(val)}}\n        className=\"hygrometer-slider\"\n        thumbClassName=\"hygrometer-thumb\"\n        trackClassName=\"hygrometer-track\"\n        ariaLabel={\"Hygrometer\"}\n        orientation=\"vertical\"\n        min={0}\n        max={100}\n        renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n        renderTrack={(props, state) => (\n          <div {...props} index={state.index}></div>\n        )}\n        invert\n        pearling\n        minDistance={1}\n      />\n    </section>\n  );\n}\n\nexport default Hygrometer;","import Hygrometer from \"./Hygrometer\";\n\nexport default Hygrometer;\n","import { Switch, Route } from \"react-router-dom\";\nimport Greenhouse from \"./components/Greenhouse\";\nimport Navigation from \"./components/Navigation\";\nimport Thermometer from \"./components/Thermometer\";\nimport Hygrometer from \"./components/Hygrometer\";\n\nfunction App() {\n  return (\n    <>\n      <Navigation />\n      <Switch>\n        <Route path=\"/thermometer\">\n          <Thermometer />\n        </Route>\n        <Route path=\"/hygrometer\">\n          <Hygrometer />\n        </Route>\n        <Route path=\"/\">\n          <Greenhouse />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport ThemeProvider from './context/ThemeContext';\nimport ClimateProvider from './context/ClimateContext';\n\nfunction Root() {\n  return (\n      <ThemeProvider>\n        <ClimateProvider>\n          <BrowserRouter>\n            <App />\n          </BrowserRouter>\n        </ClimateProvider>\n      </ThemeProvider>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}